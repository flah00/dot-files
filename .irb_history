a=[0,1,-1]
res = a.inject({pos:0,neg:0,zero:0}) {|memo,val| if val>0; memo[:pos]+=1; elsif val<0; memo[:neg]+=1; else memo[:zero]+=1; end}; printf "%0.6f\n" % [res[:pos]/a.count]
res = a.inject({pos:0,neg:0,zero:0}) {|memo,val| if val>0; memo[:pos]+=1; elsif val<0; memo[:neg]+=1; else memo[:zero]+=1; end}; 
res = a.inject({pos:0,neg:0,zero:0}) {|memo,val| if val>0; memo[:pos]+=1; elsif val<0; memo[:neg]+=1; else memo[:zero]+=1; end; memo}; 
printf "%0.6f\n" % [res[:pos]/a.count]
a.count
1/3
printf "%0.6f\n" % [res[:pos]/a.count.to_f]
res = a.inject({pos:0.0,neg:0.0,zero:0.0}) {|memo,val| if val>0; memo[:pos]+=1; elsif val<0; memo[:neg]+=1; else memo[:zero]+=1; end; memo}; 
printf "%0.6f\n" % [res[:pos]/a.count]
a=[0,1,-1]
res = a.inject({pos:0.0,neg:0.0,zero:0.0}) {|memo,val| if val>0; memo[:pos]+=1; elsif val<0; memo[:neg]+=1; else memo[:zero]+=1; end; memo}; 
a,b="12:23:45P"[/^(\d\d)([\d:]+)/]
a
b
$1
$2
a,b="12:23:45P"[/^(\d\d)([\d:]+)(\a)/]
a,b="12:23:45P"[/^(\d\d)([\d:]+)(\w)/]
$3
"1"+1
"1".to_i+1
7/2
a=[1,1,2,2,3,4,4]
Integer.abs
require 'integer'
-1.abs
[1,2].reverse
